name: Test

on:
  pull_request:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:

  docker:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        image:
        - 'bullseye-llvm-9'
        - 'buster-llvm-7'
        - 'ubuntu20-llvm-10'
        - 'ubuntu18-llvm-5.0'
        - 'fedora33-llvm'
        - 'fedora32-llvm'
    runs-on: ubuntu-latest
    container: 'ghdl/ghdl:${{ matrix.image }}'
    name: 'üõ≥Ô∏è ghdl/ghdl:${{ matrix.image }}'
    steps:

    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2

    - name: '‚öôÔ∏è Install dependencies'
      if: "!contains(matrix.image, 'fedora')"
      run: |
        apt update -qq
        apt install -y python3

    - name: '‚öôÔ∏è Install dependencies'
      if: contains(matrix.image, 'fedora')
      run: |
        dnf update -y
        dnf install -y python3

    - name: Test Abort
      run: ./test-abort/run.sh


  ubuntu:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        backend: [ llvm, gcc ]
        version: [ 18.04, 20.04, latest ]
    runs-on: ubuntu-${{ matrix.version }}
    name: 'üêß Ubuntu ${{ matrix.version }} ¬∑ ${{ matrix.backend }}'
    steps:

    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2

    - name: Run Action
      uses: ./
      with:
        backend: ${{ matrix.backend }}

#    - name: Test
#      run: |
#        echo "GHDL_PREFIX: $GHDL_PREFIX"
#        echo "GHDL: $GHDL"
#        echo "GHDL_LIBS: $GHDL_LIBS"
#        ghdl --version
#        $GHDL --version

    - name: Test Abort
      run: ./test-abort/run.sh

    - name: 'üêç Setup Python'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: 'üêç Install dependencies'
      run: python -m pip install --progress-bar off pytest

    - name: Pytest
      run: python -m pytest -v -s -ra test.py --color=yes


  windows:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        sys: [
          #{ icon: 'üü¶', msys: MINGW32, backend: mcode },
          { icon: 'üü™', msys: MINGW64, backend: llvm }
        ]
        version: [ 2016, 2019, latest ]
    runs-on: windows-${{ matrix.version }}
    name: '${{ matrix.sys.icon }} ${{ matrix.sys.msys }} ${{ matrix.version }} ¬∑ ${{ matrix.sys.backend }}'
    steps:

    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2

    - name: '${{ matrix.sys.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys.msys }}
        update: true
        install:
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-dlfcn

    - name: Run Action
      uses: ./
      with:
        backend: ${{ matrix.sys.backend }}

#    - name: Test MSYS2
#      shell: msys2 {0}
#      run: |
#        echo "MSYS2_PATH: $MSYS2_PATH"
#        echo "GHDL_PREFIX: $GHDL_PREFIX"
#        echo "GHDL: $GHDL"
#        ghdl --version
#        $GHDL --version

#    - name: Test gitforwindows
#      shell: bash
#      run: |
#        echo "MSYS2_PATH: $MSYS2_PATH"
#        "$MSYS2_PATH"${{ matrix.sys.msys }}\\bin\\ghdl.exe --version
#        $GHDL --version

#    - name: Test powershell
#      shell: powershell
#      run: |
#        echo "MSYS2_PATH: $env:MSYS2_PATH"
#        & "$($env:MSYS2_PATH)${{ matrix.sys.msys }}\bin\ghdl.exe" --version
#        & "$env:GHDL" --version

    - name: Test Abort
      shell: msys2 {0}
      run: ./test-abort/run.sh

    - name: 'üêç Install dependencies'
      shell: msys2 {0}
      run: python -m pip install --progress-bar off pytest vunit_hdl

    - name: Pytest
      shell: msys2 {0}
      run: python3 -m pytest -v -s -ra test.py --color=yes
